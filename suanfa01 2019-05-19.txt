<算法>

引言：数据如何存放在内存中，有两种最基本的方法，数组和链表。

1.链表：
    总结：
        a.链表中的元素可存储在内存的任何地方。
        b.链表的每个元素都存储了下一个元素的地址，从而使一系列随机的内存地址串在一起。
        c.在链表中添加元素很容易，只需将其存入内存，并将其地址存储到前一个元素中。
        d.使用链表时，根本就不需要移动元素，只要有足够的内存空间，就能为链表分配内存。
        e.链表的优势在插入元素方面。
2.数组：
    总结：
        a.数组连续存储，有不连续的时候需要移动元素。
        b.数组使用下标读取数据。
        c.数组事先分配好空间，空间不足需要扩容。

3.不同:
    1.在需要读取链表的最后一个元素时，你不能直接读取，因为你不知道他所处的地址，必须先访问元素#1，从中获取元素#2的地址，再访问#2并从中获取#3的地址，以此类推，直到访问最后一个元素。需要同时读取所有元素时，链表的效率很高：读取第一个元素，根据其中的地址再读取第二个元素，以此类推。如果需要跳跃，链表的效率真的很低。
    2.数组与此不同：你知道其中每个元素的地址。例如一个数组包含5个元素，起始地址是00，那么元素#5的地址就是04。需要随机地读取元素时，数组的效率很高，因为可迅速找到数组的任何元素。而在链表中，元素并非靠在一起，所以无法迅速算出第5个元素的内存地址，必须从第一个开始访问。

    删除：
        需要删除元素，链表选择更好，修改元素指向的地址即可。数组必须移动元素，造成麻烦。
    插入：
        使用链表插入，需要修改指向的地址就行，数组必须移动，造成麻烦，如果数组空间不够，还需要扩容，更加麻烦。
    查找：
        链表查找要从前往后扫描，非常麻烦。数组只需要读取下标，简便。

            数组    链表
    读取    O(1)    O(n)

    插入    O(n)    O(1)
    
    删除    O(n)    O(1)

下次开始讲排序。